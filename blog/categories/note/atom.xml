<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: note | 西去无狗的网络日志]]></title>
  <link href="http://songxiaofeng1981.github.com/blog/categories/note/atom.xml" rel="self"/>
  <link href="http://songxiaofeng1981.github.com/"/>
  <updated>2012-10-17T11:23:28+08:00</updated>
  <id>http://songxiaofeng1981.github.com/</id>
  <author>
    <name><![CDATA[xiaofeng.song]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress rake 加速，主题更改方法]]></title>
    <link href="http://songxiaofeng1981.github.com/blog/2012/10/17/octopress-tip/"/>
    <updated>2012-10-17T11:06:00+08:00</updated>
    <id>http://songxiaofeng1981.github.com/blog/2012/10/17/octopress-tip</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://melandri.net/2012/02/14/octopress-theme-customization/" title="引用">修改主题参考</a></li>
<li><a href="http://zacharymaril.com/blog/2012/02/24/please-please-octopress/" title="引用">修改主题参考</a></li>
</ul>


<!--more-->


<h2><a href="http://blog.pixelingene.com/2011/09/tips-for-speeding-up-octopress-site-generation/" title="tip">tip octopress加速</a></h2>

<blockquote><ul>
<li>rake isolate[filename]: Move all other posts than the one currently being worked on to a temporary stash location (stash) so regenerating the site happens much quicker</li>
<li>rake integrate: Move all stashed posts back into the posts directory, ready for site generation</li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 乱码解决方法,以及云同步方法]]></title>
    <link href="http://songxiaofeng1981.github.com/blog/2012/10/16/octopress-recipe/"/>
    <updated>2012-10-16T16:13:00+08:00</updated>
    <id>http://songxiaofeng1981.github.com/blog/2012/10/16/octopress-recipe</id>
    <content type="html"><![CDATA[<ul>
<li>octopress 存在乱码，编译不过去的现象。有时候主页没有乱码，链接点进去有乱码。这个问题困扰很久。现在总算解决了。
当然，categories 还没有加上。这个增加就会出现乱码，只能TODO</li>
</ul>


<!--more-->


<ol>
<li>自动生成的文件名称用中文，改写title时 用双引号扩住。</li>
<li>默认主页显示所有内容。编辑时在页面中增加 <code>&lt;!--more--&gt;</code> 这行上下要空开，会只显示 more前面的部分。后面的省略。</li>
<li><p>在环境变量中增加字符集。如下。安装了git.bash后可以用下面的命令。</p>

<pre><code> $ vim ~/.bash_profile
 export   LC_ALL=zh_CN.UTF-8
 export   LANG=zh_CN.UTF-8
</code></pre></li>
<li><p>书写markdwon文件时保存为utf-8 。</p></li>
<li>为octopress 设置百度云同步。前段时间baidu活动，网盘100g。实在太给力了。
 现在把md文件和百度网盘同步：</li>
</ol>


<blockquote><ul>
<li>  为win7创建软连接：

<pre><code>命令格式为： mklink source origin ,即在桌面创建一个指向 `c:\Users\song\octopress\
source\_posts` 的超链接。

  C:\Users\song&gt;mklink /d   C:\Users\song\Desktop\_postse c:\Users\song\octopress\
    source\_posts
</code></pre></li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snippets 自动提示功能]]></title>
    <link href="http://songxiaofeng1981.github.com/blog/2012/10/11/sublime-snippets/"/>
    <updated>2012-10-11T11:52:00+08:00</updated>
    <id>http://songxiaofeng1981.github.com/blog/2012/10/11/sublime-snippets</id>
    <content type="html"><![CDATA[<ul>
<li>sublime 的 Snippets 可以自定义代码补全功能。</li>
</ul>


<!--more-->


<pre><code>1. 我建了一个python的main方法自动提示,步骤如下：

    1.  (Tools &gt; new Snippet) 

            &lt;!-- See http://www.sublimetext.com/docs/snippets for more information --&gt;
            &lt;snippet&gt;
                &lt;tabTrigger&gt;main_song&lt;/tabTrigger&gt;
                &lt;scope&gt;source.python&lt;/scope&gt;
                &lt;description&gt;main&lt;/description&gt;
                &lt;content&gt;&lt;![CDATA[
            if __name__ == '__main__' :
                ${0:pass}
            ]]&gt;&lt;/content&gt;
            &lt;/snippet&gt;

    2.  保存为文件名 main.sublime-snippet。默认保存到package文件下。这样升级的时候不会覆盖掉。
</code></pre>

<hr />

<p>参考以下链接：</p>

<blockquote><p> <a href="http://7626.net/?p=164" title="引用">Sublime Text 2 使用配置心得 – notepad++ 略丑</a></p>

<p> <a href="http://qilei.org/201204/sublime-text2-setting/" title="引用">Sublime Text 2配置和使用</a></p></blockquote>

<p>为win7创建软连接：
命令格式为： mklink source origin ,即在桌面创建一个指向 <code>c:\Users\song\octopress\
source\_posts</code> 的超链接。</p>

<pre><code>C:\Users\song&gt;mklink /d   C:\Users\song\Desktop\_postse c:\Users\song\octopress\
source\_posts
</code></pre>

<p><a href="http://sinosmond.github.com/blog/2012/06/24/centos6-dot-2-plus-jdk6-plus-tomcat7-plus-nginx1-dot-2-plus-mysql5-dot-x/">http://sinosmond.github.com/blog/2012/06/24/centos6-dot-2-plus-jdk6-plus-tomcat7-plus-nginx1-dot-2-plus-mysql5-dot-x/</a></p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python 快速分组方法]]></title>
    <link href="http://songxiaofeng1981.github.com/blog/2012/09/27/python/"/>
    <updated>2012-09-27T18:01:00+08:00</updated>
    <id>http://songxiaofeng1981.github.com/blog/2012/09/27/python</id>
    <content type="html"><![CDATA[<h1>利用python对一组数据进行分组，类似sql语句的groupby</h1>

<p>代码示例如下：</p>

<!--more-->


<p>{% codeblock  lang:python %}</p>

<p>import urllib2
import json
from collections import defaultdict</p>

<p>class User(object):</p>

<pre><code>def __init__(self, code,productCode):
    self.code = code
    self.productCode=productCode
</code></pre>

<p>def get_channels(api):</p>

<pre><code>try:
    opener = urllib2.urlopen(api, timeout=30)
    datas = []
    for recorder in json.loads(opener.read()): 
        customer = {
            "code":recorder['code'],
            "productCode":recorder['productCode'],
        }
        datas.append(customer)
    # print len(datas)
    return datas
except Exception, e:
    print e
</code></pre>

<p>if <strong>name</strong> == "<strong>main</strong>":</p>

<pre><code>channels = get_channels('http://xxx.x.x.x/customer/wasu/channels')
users = []
# print len(channels)
for f in channels:
    u = User(f['code'],f['productCode'])
    # print u
    users.append(u)
    # print len(users)
persons_by_age = defaultdict(list)
for person in users:
    persons_by_age[person.productCode].append(person)

for x in persons_by_age:
    for y in (persons_by_age[x]):
        print y.code
</code></pre>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[django项目添加日志（转载）]]></title>
    <link href="http://songxiaofeng1981.github.com/blog/2012/06/17/django-note/"/>
    <updated>2012-06-17T14:38:00+08:00</updated>
    <id>http://songxiaofeng1981.github.com/blog/2012/06/17/django-note</id>
    <content type="html"><![CDATA[<ul>
<li><p>我用的django的版本是1.3，听闻django可以配置日志模块，不用自己单独写，于是一阵狂搜加看官方文档解决了我的需求。</p></li>
<li><p>我的需求是需要配置多个日志文件，网上搜出来大部分是一个的，所以给大家一个我的例子做参考。</p></li>
</ul>


<!--more-->


<ol>
<li>在setting.py里面配置如下：</li>
</ol>


<p>{% codeblock  lang:python %}</p>

<pre><code>LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
                'format': '%(levelname)s %(asctime)s %(message)s'
                },
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter':'standard',
        },
        'test1_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'path1',
            'formatter':'standard',
        },
        'test2_handler': {
            'level':'DEBUG',
                   'class':'logging.handlers.RotatingFileHandler',
            'filename':'path2',
            'formatter':'standard',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'test1':{
            'handlers': ['test1_handler'],
            'level': 'INFO',
            'propagate': False
        },
         'test2':{
            'handlers': ['test2_handler'],
            'level': 'INFO',
                          'propagate': False
        },
    }
}
</code></pre>

<p>{% endcodeblock %}</p>

<ol>
<li><p>里面的level什么的可以自己调整，需要几个文件就配几个handler和logger，还是很方面的。用的时候怎么用呢，看下面吧。</p></li>
<li><p>在要用log的view.py里面，如果想用test1这个日志，则</p>

<pre><code>     &gt;  log=logging.getLogger('test1')

     &gt;  log.error（“日志内容”） 
</code></pre></li>
<li><p>如果，想要在日志内容里面传递变量，怎么办</p>

<pre><code>       &gt; log.error(" %s : execute %s failed",变量1,变量2)，比较像c的printf，还是很方便的。
</code></pre></li>
</ol>

]]></content>
  </entry>
  
</feed>
